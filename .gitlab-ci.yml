# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages 

stages:
  - init_repo          # List of stages for jobs, and their order of   execution
  - build
  - test
#   - cov-analysis
#   - createJson
#   - build-l4v
#   - deploy
variables:
  branch_name: develop
  baseWork: /home/gitlab-runner
  git_url: git@gitlab.com:xcalsecureos/sel4.git
  file_name: ${branch_name}_${CI_PIPELINE_ID}
  code_url: ${baseWork}/${file_name}
  
init_repo-job:       # This job runs in the build  stage, which runs  f irst.
  stage: init_repo
  tags: 
    - test-tag
  script:
    - cd ${baseWork} 
    - mkdir ${file_name}
    - cp -r sel4test ${file_name}
    - cp -r sel4bench ${file_name}
    - cd ${file_name}
    - git clone -b develop  ${git_url} kernel
    - cd  kernel && commitid=`git rev-parse --short HEAD` 
    - echo commitid=$commitid >> ../test.txt
    - echo commitid:$commitid >> ../commitid.txt
    - cd ${code_url}
    - cp -r kernel sel4test
    - cp -r kernel sel4bench

# build-sel4test-job:       # This job runs in the build stage,    which runs  frst.
#   stage: build
#   tags: 
#     - test-tag
#   script:
#     - cd ${baseWork}
#     - sudo docker run --name build_${file_name}_sel4test_job --rm -v ${code_url}/sel4test:/home trustworthysystems/sel4:latest /bin/bash -c "cd /home && mkdir ia32_build && cd ia32_build && ../init-build.sh -DPLATFORM=ia32 -DRELEASE=TRUE -DSIMULATION=TRUE && /usr/bin/ninja"
#   needs:
#     - init_repo-job 
build-sel4bench-job:       # This job runs in the build stage,   which runs  frst.
  stage: build
  tags: 
    - test-tag
  script:
    - cd ${baseWork} 
    - sudo docker run --name build_${file_name}_sel4bench_job --rm -v ${code_url}/sel4bench:/home trustworthysystems/sel4:latest /bin/bash -c "cd /home && mkdir build && cd build && ../init-build.sh -DPLATFORM=sabre -DHARDWARE=TRUE -DAARCH32=TRUE -DRELEASE=TRUE -DFAULT=TRUE -DFASTPATH=TRUE && /usr/bin/ninja"
  needs:
    - init_repo-job 
# test-sel4test-job:       # This job runs in the build stage, which runs  frst.
#   stage: test
#   tags: 
#     - test-tag
#   script:
#     - cd ${baseWork}
#     - sudo docker run --name test_${file_name}_sel4test_job --rm -v ${code_url}/sel4test:/home trustworthysystems/sel4:latest /bin/bash -c "cd /home && bash ./test.sh"
#   needs:
#     - build-sel4test-job          
test-sel4test-job:       # This job runs in the build stage, which runs  frst.
  stage: test
  tags: 
    - test-tag
  script:
    - cd ${baseWork}
    - sudo docker run --name test_${file_name}_sel4bench_job --rm -v ${code_url}/sel4test:/home trustworthysystems/sel4:latest /bin/bash -c "cd /home && bash ./test.sh"
  needs:
    - build-sel4bench-job          


